let _target,isAttached;const callbacks={},reducePath=a=>a.reduce((a,b)=>a?a[b]:a,_target);async function messageHandler(a){const b=a.data;let c,d,e;if(c=b&&b.id)if((d=b.type)&&_target){b.path=b.path||[];const e={id:c},f=reducePath(b.path),g=reducePath(b.path.slice(0,-1));switch(d){case"G":e.value=f;break;case"S":const a=b.path.length&&b.path.pop();a&&(g[a]=b.value);break;case"A":try{e.value=await f.apply(g,b.args||[])}catch(a){e.error=a.toString()}}a.source.postMessage(e,"*")}else(e=callbacks[c])&&(delete callbacks[c],b.error?e[1](new Error(b.error)):e[0](b.value))}function attach(){isAttached||(self.addEventListener("message",messageHandler),isAttached=!0)}function createRemote(a){const b=`${Date.now()}-${Math.floor(Math.random()*Number.MAX_SAFE_INTEGER)}`;let d=0;return attach(),c=>{const e=c.args||[],f=`${b}-${++d}`;return new Promise((b,d)=>{callbacks[f]=[b,d],a.postMessage(Object.assign({},c,{id:f,args:e}),"*")})}}function proxy(a,b){return b=b||[],new Proxy(function(){},{get(c,d,e){if("then"===d){if(0===b.length)return{then:()=>e};const c=a({type:"G",path:b});return c.then.bind(c)}return proxy(a,b.concat(d))},set(c,d,e){return a({type:"S",path:b.concat(d),value:e})},apply(c,d,e){return a({type:"A",path:b,args:e})}})}function link(a){return proxy(createRemote(a))}function expose(a){_target=a,attach()}export{link,expose};
